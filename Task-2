<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>

    <div class="container">
        <h1>My To-Do List</h1>

        <!-- Input field and button for adding tasks -->
        <div class="input-group">
            <input type="text" id="new-task" placeholder="Add a new task" />
            <button id="add-task-btn">Add Task</button>
        </div>

        <!-- List to display tasks -->
        <ul id="task-list"></ul>

        <!-- Clear All button -->
        <button id="clear-all-btn">Clear All</button>
    </div>

    <script src="script.js"></script>
</body>
</html>
/* General body styling */
body {
    font-family: 'Arial', sans-serif;
    background-color: #f5f5f5;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

/* Container for the app */
.container {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    width: 400px;
    text-align: center;
}

/* Heading */
h1 {
    color: #333;
    font-size: 24px;
    margin-bottom: 20px;
}

/* Input field and button styling */
.input-group {
    display: flex;
    justify-content: center;
    gap: 10px;
}

#new-task {
    padding: 10px;
    font-size: 16px;
    width: 70%;
    border-radius: 5px;
    border: 1px solid #ccc;
}

#add-task-btn {
    padding: 10px 20px;
    background-color: #007bff;
    color: white;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#add-task-btn:hover {
    background-color: #0056b3;
}

/* Task list styling */
ul {
    list-style-type: none;
    padding: 0;
    margin-top: 20px;
}

li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    background-color: #f8f9fa;
    border-radius: 5px;
    margin: 5px 0;
    font-size: 18px;
    transition: background-color 0.3s;
}

li:hover {
    background-color: #e2e6ea;
}

.completed {
    text-decoration: line-through;
    color: #888;
}

/* Clear All button styling */
#clear-all-btn {
    margin-top: 20px;
    padding: 10px 20px;
    background-color: #dc3545;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

#clear-all-btn:hover {
    background-color: #c82333;
}
// Get the necessary DOM elements
const addTaskButton = document.getElementById('add-task-btn');
const newTaskInput = document.getElementById('new-task');
const taskList = document.getElementById('task-list');
const clearAllButton = document.getElementById('clear-all-btn');

// Function to add a new task
function addTask() {
    const taskText = newTaskInput.value.trim();
    if (taskText !== '') {
        const taskItem = document.createElement('li');
        taskItem.textContent = taskText;

        // Add 'Complete' and 'Delete' buttons to each task
        const completeButton = document.createElement('button');
        completeButton.textContent = 'Complete';
        completeButton.classList.add('complete-btn');
        completeButton.addEventListener('click', () => markComplete(taskItem));

        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.classList.add('delete-btn');
        deleteButton.addEventListener('click', () => deleteTask(taskItem));

        taskItem.appendChild(completeButton);
        taskItem.appendChild(deleteButton);

        taskList.appendChild(taskItem);

        // Clear the input field after adding the task
        newTaskInput.value = '';
    } else {
        alert('Please enter a task!');
    }
}

// Function to mark a task as complete
function markComplete(taskItem) {
    taskItem.classList.toggle('completed');
}

// Function to delete a task
function deleteTask(taskItem) {
    taskList.removeChild(taskItem);
}

// Function to clear all tasks
function clearAllTasks() {
    taskList.innerHTML = '';
}

// Event listener to add a task when the button is clicked
addTaskButton.addEventListener('click', addTask);

// Event listener to clear all tasks when the button is clicked
clearAllButton.addEventListener('click', clearAllTasks);

// Event listener to add a task when 'Enter' key is pressed
newTaskInput.addEventListener('keypress', (event) => {
    if (event.key === 'Enter') {
        addTask();
    }
});
